generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum TicketStatus {
  OPEN
  IN_PROGRESS
  RESOLVED
  CLOSED
}

enum TicketPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

model User {
  id           String         @id @default(cuid())
  username     String         @unique
  passwordHash String
  role         Role           @default(USER)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  ticketsCreated Ticket[]     @relation("TicketsCreated")
  ticketsAssigned Ticket[]    @relation("TicketsAssigned")
  comments      Comment[]
  refreshTokens RefreshToken[]
}

model Ticket {
  id          String         @id @default(cuid())
  title       String
  description String
  status      TicketStatus   @default(OPEN)
  priority    TicketPriority @default(MEDIUM)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  createdById String
  createdBy   User           @relation("TicketsCreated", fields: [createdById], references: [id])

  assignedToId String?
  assignedTo   User?         @relation("TicketsAssigned", fields: [assignedToId], references: [id])

  comments    Comment[]
}

model Comment {
  id        String   @id @default(cuid())
  body      String
  createdAt DateTime @default(now())

  ticketId  String
  ticket    Ticket   @relation(fields: [ticketId], references: [id])

  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
}

model RefreshToken {
  id        String   @id @default(cuid())
  tokenHash String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  revokedAt DateTime?
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([expiresAt])
}
